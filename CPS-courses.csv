CPS 352,"Concepts and Implementation of Programming Languages","Study of programming language concepts through the implementation of interpreters and assessment of the conceptual differences in the resulting languages. Concepts covered include syntax and semantics, regular and context-free grammars, parsing, binding, scope, parameter passing, lazy evaluation, types, currying, and continuations. A comparative survey of the imperative, functional, logical, and object-oriented paradigms of programming is presented.",CPS 350
CPS 353,"Numerical Methods I","Study of the algorithms of numerical mathematics with emphasis on interpolation, the solution of nonlinear equations, and linear systems of equations including matrix methods; analysis of errors associated with the algorithms.",CPS 132,CPS 150,MTH 169
CPS 350,"Data Structures & Algorithms","Dynamic nonlinear data structures including trees, binary trees, search trees, balanced search trees, priority queues, and graphs, with an emphasis on their implementation, uses, and associated algorithms. Analysis of the computational complexity of algorithms related to these structures.",CPS 151
CPS 356,"Operating Systems","Introduces the theoretical and practical concepts underlying an operating system's structure and operation. Topics include process and thread creation and management, scheduling, concurrent, multi-threaded programming and synchronization, deadlock, memory management, virtual memory, and computer security.",CPS 250,ECE 314,CPS 350
CPS 341,"Discrete Structures","Propositional logic, Boolean algebra, predicate logic, logical deductions, proof techniques, sets, combinatorics, recurrences, functions, relations, discrete structures such as graphs, digraphs, and associated algorithms.",CPS 150
CPS 346,"Operating Systems I","Semaphores, conditions, monitors, and kernels. Concurrent programming, interrupts, memory, and process management. Design and implementation of multithreaded and distributed system components using concurrent languages.",CPS 250,CPS 350
CPS 343,"Comparative Languages","Language design issues, formal syntax specification, data types and storage methods, activation records and procedural object oriented, functional, and logic programming paradigms.",CPS 350
CPS 387,"Computer System Design I","Study of the elements of computer design. Design of combinatorial and sequential logic circuits using current integrated circuit devices. Discussion of encoders, decoders, registers, counters, etc. as applied to design and use of control, arithmetic, logic, and storage units. Instruction set, addressing modes and CPU design. Laboratory experiments with these devices.",CPS 250,CPS 341
CPS 430,"Database Management Systems","Physical and logical organization of databases: the entity-relationship model; relational database model; the data definition and data manipulation language of a commercial database management system; integrity constraints; conceptual database design.",CPS 350
CPS 437,"System Architectures & Networking","Issues and techniques used in the physical design of computer-based information systems. Basic operating systems, hardware architecture and networking prinicples. Intended for students majoring in MIS; not open to students majoring in CPS, CIS, or PCS.",MIS 380,MIS 385
CPS 433,"Cyber Forensics","Preserving, recovering, and analyzing digital evidence found in physical and virtual worlds. Topics include data and information retrieval; computer/media forensic analysis, techniques, and tools; and basic criminal law concepts.",CPS 356
CPS 434,"Big Data and Cloud Computing","Focuses on technologies to make intelligent decisions for scientific and business applications. Topics include semantic web, knowledge representation languages for expressing metadata, machine learning, data visualization, data integration, and predictive models.",CPS 350
CPS 432,"Database Management Systems II","Study of query execution and optimization, transaction management, concurrency control, recovery and security techniques. Advanced data models and emerging trends in database systems, like object oriented database systems, distributed database systems, the client-server architecture, multidatabase and heterogeneous systems. Other current database topics and emerging technologies will be discussed.",CPS 430
CPS 424,"Discrete Event Simulation Techniques","Design and use of simulation models; study and use of special-purpose simulation languages such as GPSS and GASP IV, SIMSCRIPT II.5. Applications.",CPS 151
CPS 422,"Software Project Management","Introduction to software project management. Topics include process models for software development, project planning techniques, estimation techniques, measuring and controlling work products and processes, managing project risk, teams and communication, and organizational issues.",CPS 310
CPS 420,"Software Engineering","Provides an overview of the software engineering discipline. Topics include software processes, requirements engineering, system modeling, architectural design, software testing, dependability and security, software reuse, distributed software engineering, project planning, quality management, configuration management, and process improvement.",CPS 350
CPS 415,"Software Testing and Security Analysis","Detailed examination of the software testing and security analysis process. Topics include testing methodologies, code analysis techniques, and secure programing principles and practices.",CPS 350
CPS 410,"User Interface Design and Development","Addresses the practical problems of designing interfaces for modern software as well as other interactive media. Topics include interaction framework and styles, design principles, design models, new interactive technologies, usability testing and facets of interaction. Group activities and project work is an integral part of this course.",CPS 350
CPS 250,"Computer Organization and Architecture","Machine and assembly language instructions, and writing assembly programs. Design of basic logic circuits needed in constructing a computer. Design of circuits for information encoding, arithmetic units, and transferring and storing information. Data path and control unit for a simple processor. Multiprocessing and alternative parallel systems.",CPS 151
CPS 242,"Web Application Development","Web application development using the state-of-the-art environments such as markup languages, scripting languages, dynamic web pages, server side technologies, and database access.",CPS 151
CPS 309,"Topics in Computer Science","Lectures or laboratory work in areas of current interest. May be taken more than once. Does not count as upper level credit for majors/minors."
CPS 312,"Systems Design","Software design process; developing structured design (e.g., structure charts) from data flow approach using coupling, cohesion, and other design guidelines; fine-tuning object-oriented analysis model to design using design patterns, and implementation.",CPS 310
CPS 310,"Systems Analysis","Methodologies for developing software, software development life cycles, data flow approach for system development, data dictionary, process specification, input/output design, E-R diagrams, normalization, and introduction to object-oriented analysis.",CPS 151
CPS 595,"Software Engineering Project I","First of a two-course project sequence. Students, either individually or in teams, must propose a project, conduct background research, justify the adequacy of the work for a graduate project, complete analysis and design using appropriate methodologies and CASE tools, and write preliminary coding. Students are expected to write code and minimize the usage of visual or other development environments. A minimum of three class presentations is expected for project proposal, progress, and final analysis/design.",CPS 510,CPS 530
CPS 592,"Special Topics","Lectures and/or laboratory experience in some areas determined by the department."
CPS 591,"Special Research Problems","Individual readings and research in a specialized area. May be taken for at most six semester hours."
CPS 599,"Thesis","Thesis."
CPS 596,"Software Project II","Continuation of CPS 595. Students are required to implement the analysis and design of their projects and make periodic presentations. Special attention needs to be given to the overall architecture of the system, usability, testing, and documentation. A minimum of two class presentations is expected for design and implementation.",CPS 595,CPS 595
CPS 583,"Graph Algorithms","Design and analysis of algorithms for problems based on graphs. Classical algorithms and efficient algorithms for restricted domains of graphs are covered. Analysis of algorithms, complexity classes P, NP, and NP-complete, traversals, bi-connectedness, strongly-connectedness, 2-SAT, planarity testing, and algorithms for restricted classes of graphs.",CPS 501
CPS 581,"Advanced Artificial Intelligence","This course continues the studies pursued in Artificial Intelligence CPS 580. It delves more deeply into certain areas such as multiple agent systems and induction, and introduces new areas, such as neural networks and planning, not covered in CPS 580. As in CPS 580, each student shall complete a final project investigating some area of research in Artificial Intelligence. The project will encompass a literature search, paper, presentation, and implementation.",CPS 580,CPS 580,CPS 580
CPS 582,"Automata Theory","Finite automata, sequential machines. Turing machines, computability, existence of self-reproducing machines."
CPS 580,"Artificial Intelligence","Presentation of theoretical concepts for artificial intelligence in the areas of knowledge representation and search techniques. These are examined in the context of applications for expert systems, semantic networks, and planning problems. Issues concerning functional programming and logic programming are also presented.",CPS 350
CPS 572,"Computer Networking","A unified view of the broad field of local area and long haul networks. A survey of the state of the art. Topics covered include networking theory, design approaches, standards, topologies and protocols.",CPS 536,CPS 570
CPS 570,"Data Communications","The study of networks of interacting computers. The analysis of distributed processing and distributed databases.",CPS 350
CPS 577,"Computer System Design I","Introduction to design and analysis of combinational and sequential circuits of MSI devices to design arithmetic and other computer functions. Analysis of a specific microcomputer architecture including usage of its machine and assembler language. Interfacing of various components with computers.",CPS 250
CPS 561,"Virtual Reality","This course offers a broad introduction of virtual reality from fundamental theories to software/hardware technologies involved with the current state of the art in VR. Topics include 3D interaction techniques on virtual immersive systems, human pose/face/hands tracking, graphics and 3D animation collaborative networked virtual environment, augmented reality systems, and security. Some unforeseen security issues in many emerging VR systems are also addressed.",CPS 350
CPS 562,"Database Management Systems II","Study of query execution and optimization, transaction management, concurrency control, recovery and security techniques. Advanced data models and emerging trends in database systems, like object-oriented database systems, distributed database systems, client-server architecture, multidatabase and heterogeneous systems. Other current database topics and emerging technologies will be discussed.",CPS 542
CPS 560,"Computer Graphics","Types of graphic hardware and their characteristics. Overview of software and techniques used in computer graphics. Two- and three-dimensional graphics displays.",CPS 350
CPS 566,"Image Processing","This course introduces students to a wide range of topics on digital image processing techniques. Topics includes image enhancement, 2D linear and nonlinear filtering, image compression and restoration, pattern recognition, big visual data analysis, and stochastic modeling on images.",CPS 350
CPS 473,"Reverse Code Engineering","Study theories on the application of cyber power to achieve certain objectives. Topics includes cyber policy, tracing strategy, targeting, cyber intelligence, measuring effects, and legal and ethical issues.",CPS 350
CPS 472,"Computer and Network Security","Computer and Network Security covers information protection. Topics includes techniques for security in multi-user and distributed systems, principles of secure design, cryptography, authentication, access-control, intrusion detection and viruses, firewalls, wireless security, cracking WEP keys, and VPN security.",CPS 356
CPS 470,"Computer Networks","Computer Networks focus on Internet protocols. Topics include packet-switch and multi-access networks, routing, flow control, congestion control, quality of service, Internet protocols, wireless networks, security, and the design of network services.",CPS 350
CPS 477,"Honors Thesis","First of two courses leading to the selection, design, investigation, and completion of an independent, original Honors Thesis project under the guidance of a faculty research advisor. Restricted to students in the University Honors Program with permission of the program director and department chairperson. Students pursuing an interdisciplinary thesis topic may register for three semester hours each in two separate disciplines in consultation with the department chairpersons."
CPS 478,"Honors Thesis","Second of two courses leading to the selection, design, investigation, and completion of an independent, original Honors Thesis project under the guidance of a faculty research advisor. Restricted to students in the University Honors Program with permission of the program director and department chairperson. Students pursuing an interdisciplinary thesis topic may register for three semester hours each in two separate disciplines in consultation with the department chairpersons."
CPS 460,"Computer Graphics","Introduction to primitives and interactive graphics software development. Topics include transforms, clipping, modeling, rendering, texture, animation, and ray tracing.",CPS 350
CPS 465,"Interactive Media","Provides an exposure to the capabilities of new digital tools to create new experiences. Topics include tools/techniques for collecting, analyzing, and visualizing 3D data; interactive audio/video using motion/light detectors; mobile interfaces; animation; smart rooms; and social networks.",CPS 350
CPS 450,"Design and Analysis of Algorithms","Introduction to order notation and algorithm analysis. Emphasis will be on learning algorithm design techniques such as divide and conquer, greedy approach, and dynamic programming through exposition of classical algorithms from domains such as sorting, string matching, and graph algorithms. Hardness of problems and introduction to the complexity classes P, NP, and NP-complete. Topics also include impact of computing techniques to the improvement or welfare of society as a whole.",CPS 341,CPS 350
CPS 455,"Computer Architecture and Design","Provides a foundation for understanding and evaluating the design principles incorporated in modern computers. Topics include history and classification of computers, instruction-level, data-level, and thread-level parallelism.",CPS 250,CPS 350
CPS 482H,"Automata Theory","Formal languages (regular, context-free, recursive, and recursively enumerable), machine models (deterministic and non-deterministic finite automata, push down automata, Turing machines), grammars (regular, context-free, and unrestricted), interplay among these concepts, Church-Turing thesis, and undecidability.",CPS 341
CPS 444,"UNIX/Linux Programming","Prepares students for developing software in the UNIX/Linux environment using the C programming language. Topics include system libraries and system calls, shells, system structures and internals, interprocess communication (pipes and signals), network programming (client-server model and sockets), pattern matching and filters, shell programming, automatic program generation, and GUI programming.",CPS 356
CPS 496,"Cooperative Education","Computer science cooperative education work experience in an approved organization. Not open to students with credit in CPS 497. Credit does not apply to major requirements. Repeat to a maximum of three semester hours.",CPS 497
CPS 491,"Capstone II","An exercise in the design, implementation, documentation, and deployment of a group project culminating in a presentation to the computer science faculty and industry representatives.",CPS 490
CPS 490,"Capstone I","Examination of principles, practices, and methodology for development of large software systems using data flow and object-oriented methodologies. User interface design, software testing, and software project management. Selecting and planning a team project; this involves team formation, project selection, project planning, and proposal writing and presentation.",CPS 350
CPS 499,"Special Topics in Computer Science","Lectures or laboratory work in advanced topics from the various areas of computer science. By arrangement. May be taken more than once."
CPS 497,"Internship","Computer science work experience in an approved organization. Not open to students with CPS 496 credit. Credit does not apply to major requirements. Repeat to a maximum of three semester hours.",CPS 496
CPS 498,"Problems in Computer Science","Individual readings and research in a specialized area. (See CPS 499.) By arrangement. May be taken more than once for additional credit.",CPS 499
CPS 485,"Evolutionary Computation","The history and use of Evolutionary Computation (EC) are explored. Popular approaches to EC (genetic algorithms, genetic programming, evolution strategies, evolutionary programming) are defined and discussed. Coursework includes implementation of evolutionary techniques and review and analysis of literature in the field.",CPS 350
CPS 482,"Automata Theory","Formal languages (regular, context-free, recursive, and recursively enumerable), machine models (deterministic and non-deterministic finite automata, push down automata, Turing machines), grammars (regular, context-free, and unrestricted), interplay among these concepts, Church-Turing thesis, and undecidability.",CPS 341
CPS 483,"Graph Algorithms","Design and analysis of algorithms for problems based on graphs. Classical algorithms and efficient algorithms for restricted domains of graphs will be covered. Analysis of algorithms, complexity classes P, NP, and NP-complete, traversals, bi-connectedness, strongly-connectedness, 2-SAT, planarity testing, and algorithms for restricted classes of graphs.",CPS 341,CPS 350
CPS 480,"Artificial Intelligence","Fundamentals concepts and techniques of intelligent systems. Topics includes knowledge representation, search strategies, predicate logic, and expert systems.",CPS 350
CPS 481,"Intelligent Systems and Machine Learning","State-of-art techniques in building intelligent systems. Topics include soft computing, agents and multiagent systems, and machine learning.",CPS 350
CPS 509,"Topics in Computer Science","Lectures in special areas of interest determined by the department. May be taken more than once for additional credit when the topics or contents change."
CPS 512,"System Design","Principles of design, introduction to software design methodologies; issues in transition from analysis to logical and physical designs; detailed discussion of structured design methodology (Yourdon, Constantine, Myers); design guidelines; transform analysis; Warnier/Orr design methodologies; designing methodologies for real-time systems; introduction to object-oriented design; CASE tools and code generators.",CPS 510
CPS 510,"System Analysis","Process-oriented, data-oriented, and object-oriented approaches for systems development; comparison of various systems development life cycles; DFD methodology for systems analysis using state-of-the-art CASE (Computer Aided Software Engineering) tools; logical and event analyses of DFD specifications; tools and techniques for modeling real-time systems; data modeling; introduction to object-oriented analysis methodologies.",CPS 350
CPS 501,"Advanced Programming and Data Structures","A bridge course for students who already have a programming background. Covers advanced data structures and programming techniques in a high level programming language."
CPS 552,"Discrete Event Simulation Techniques","Simulation models; random number generation testing, special purpose simulation languages, statistical analysis of output; regenerative models; trace-driven models. Emphasis on models related to computer operating system design and performance evaluation.",CPS 350
CPS 543,"Advanced Concepts of Programming Languages","This course involves the study of advanced programming language concepts and paradigms. Possible topics, covered at the discretion of the instructor, include metalinguistic abstraction and macros, fixed-point combinators, reflection and meta-object protocols, and generative and aspect-oriented programming with emphasis on applying these concepts in practical application domains.",CPS 352
CPS 544,"Systems Programming","Analysis of compilers and their construction; programming techniques discussed in the current literature; advanced computer applications in both mathematical and nonnumeric areas.",CPS 350
CPS 542,"Database Management Systems","Physical and logical organization of data files; hierarchical, network, and relational database models; data definition language and data manipulation language of a commercial database management system; query languages.",CPS 350
CPS 536,"Operating Systems I","Models and algorithms pertinent to the design of computer operating systems; concurrent processes including synchronization, communication and deadlock problems, process and device scheduling policies, design of file systems, reliability and protection.",CPS 350
CPS 534,"Distributed Computing with Big Data","This course introduces students to distributed computation frameworks (such as MapReduce) associated with massive datasets. Topics focus on parallel/distributed algorithms, data mining and machine learning algorithms for processing and analyzing very large amounts of data, and data visualization.",CPS 350
CPS 530,"Algorith Design","The design and analysis of computer algorithms, including order notation, sorting, dynamic programming, graph algorithms, string matching, matrix multiplication, NP-completeness.",CPS 350
CPS 518,"Software Engineering","No description available."
CPS 522,"Software Project Management","Cost and effort estimation models for software projects, planning techniques, productivity metrics, risk management, maintenance, reuse, quality assurance, configuration management, Capability Maturity Models (CMM and P-CMM), and ISO 9001.",CPS 510,CPS 518,CPS 520
CPS 520,"Object-Oriented Systems Development","Unified Modeling Language (UML), use cases, class diagrams, sequence diagrams, collaboration diagrams, state charts, activity diagrams, component and deployment views, design patterns, and implementation of various UML models through team projects.",CPS 350,CPS 510
CPS 111,"Introduction to Personal Computers","Emphasis on use of operating system, particularly file organization, and applications: word processor, spreadsheet, database and presentation software."
CPS 107,"Introduction to Computer Science","An introduction to the field of Computer Science, covering computers and society, the internals and externals of computer hardware and software, as well as some exposure to advanced topics of artificial intelligence, computer forensics, and databases. Intended for science and engineering students."
CPS 150,"Algorithms & Programming I","Introduction to computers and programming using a high-level, structured language. Topics include problem solving, algorithms, programming constructs, data representation, stepwise refinement, and debugging."
CPS 151,"Algorithms & Programming II","Algorithms and Programming II covers object-oriented design and development, data abstraction, exception handling, linked lists, stacks, queues, binary trees, and recursion using a high level, structured language.",CPS 150
CPS 144,"Introduction to Computer Programming","Fundamentals of computer programming including algorithms, program structure, library routines, debugging, and program verification. Computer solutions of problems from social sciences using a suitable compiler language such as Visual Basic."
CPS 149,"Creative Media Applications","Multidisciplinary, project-driven learning process courses that encourages students to develop problem solving and teamwork skills while fostering creativity and logic. The goal is not only to provide students with some “programming maturity,” but to also engage them through working in small teams on existing projects related to their discipline and interest. Projects may include creative animations and games, mobile app developments, or avatars."
CPS 132,"Computer Programming for Engineering & Science","Fundamentals of computer programming including algorithms, program structure, library routines, debugging, and program verification. Calculus-based computer solutions of problems from science and engineering using C++. Corequisite(s): MTH 168.",MTH 168
